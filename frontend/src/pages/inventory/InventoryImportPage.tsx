import React, { useState } from 'react';
import {
  Card,
  Upload,
  Button,
  Table,
  Typography,
  Row,
  Col,
  Progress,
  Alert,
  Space,
  Divider,
  Tag,
  Steps,
  Form,
  Input,
  Select,
  notification,
  Modal
} from 'antd';
import {
  UploadOutlined,
  FileExcelOutlined,
  CheckCircleOutlined,
  ExclamationCircleOutlined,
  DownloadOutlined,
  ImportOutlined,
  InboxOutlined
} from '@ant-design/icons';
import { formatVND } from '../../utils/formatters/vietnameseCurrency';

const { Title, Text } = Typography;
const { Dragger } = Upload;
const { Step } = Steps;
const { Option } = Select;

interface ImportItem {
  id: string;
  productCode: string;
  productName: string;
  category: string;
  quantity: number;
  unitPrice: number;
  supplier: string;
  expiryDate?: string;
  status: 'pending' | 'success' | 'error';
  error?: string;
}

const InventoryImportPage: React.FC = () => {
  const [currentStep, setCurrentStep] = useState(0);
  const [importData, setImportData] = useState<ImportItem[]>([]);
  const [uploading, setUploading] = useState(false);
  const [importing, setImporting] = useState(false);
  const [form] = Form.useForm();

  // Sample import data
  const sampleData: ImportItem[] = [
    {
      id: '1',
      productCode: 'IP14-128GB',
      productName: 'iPhone 14 128GB',
      category: 'ƒêi·ªán tho·∫°i',
      quantity: 50,
      unitPrice: 22000000,
      supplier: 'Apple Vietnam',
      status: 'pending'
    },
    {
      id: '2',
      productCode: 'SS-S24-256GB',
      productName: 'Samsung Galaxy S24 256GB',
      category: 'ƒêi·ªán tho·∫°i',
      quantity: 30,
      unitPrice: 25000000,
      supplier: 'Samsung Vietnam',
      status: 'pending'
    },
    {
      id: '3',
      productCode: 'MBA-M2-512GB',
      productName: 'MacBook Air M2 512GB',
      category: 'Laptop',
      quantity: 20,
      unitPrice: 35000000,
      supplier: 'Apple Vietnam',
      status: 'pending'
    }
  ];

  const handleUpload = (info: any) => {
    setUploading(true);
    
    // Simulate file processing
    setTimeout(() => {
      setImportData(sampleData);
      setCurrentStep(1);
      setUploading(false);
      notification.success({
        message: 'Upload th√†nh c√¥ng',
        description: 'File ƒë√£ ƒë∆∞·ª£c t·∫£i l√™n v√† x·ª≠ l√Ω th√†nh c√¥ng'
      });
    }, 2000);
  };

  const handlePreview = () => {
    setCurrentStep(1);
  };

  const handleImport = () => {
    setImporting(true);
    setCurrentStep(2);

    // Simulate import process
    setTimeout(() => {
      const updatedData = importData.map(item => ({
        ...item,
        status: Math.random() > 0.1 ? 'success' as const : 'error' as const,
        error: Math.random() > 0.1 ? undefined : 'M√£ s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i'
      }));
      
      setImportData(updatedData);
      setImporting(false);
      setCurrentStep(3);
      
      const successCount = updatedData.filter(item => item.status === 'success').length;
      const errorCount = updatedData.filter(item => item.status === 'error').length;
      
      notification.success({
        message: 'Import ho√†n t·∫•t',
        description: `Th√†nh c√¥ng: ${successCount}, L·ªói: ${errorCount}`
      });
    }, 3000);
  };

  const columns = [
    {
      title: 'M√£ s·∫£n ph·∫©m',
      dataIndex: 'productCode',
      key: 'productCode',
      width: 120
    },
    {
      title: 'T√™n s·∫£n ph·∫©m',
      dataIndex: 'productName',
      key: 'productName',
      width: 200
    },
    {
      title: 'Danh m·ª•c',
      dataIndex: 'category',
      key: 'category',
      width: 120
    },
    {
      title: 'S·ªë l∆∞·ª£ng',
      dataIndex: 'quantity',
      key: 'quantity',
      width: 100,
      render: (quantity: number) => (
        <Text strong style={{ color: '#52c41a' }}>{quantity.toLocaleString()}</Text>
      )
    },
    {
      title: 'ƒê∆°n gi√°',
      dataIndex: 'unitPrice',
      key: 'unitPrice',
      width: 150,
      render: (price: number) => (
        <Text strong>{formatVND(price)}</Text>
      )
    },
    {
      title: 'Nh√† cung c·∫•p',
      dataIndex: 'supplier',
      key: 'supplier',
      width: 150
    },
    {
      title: 'Tr·∫°ng th√°i',
      dataIndex: 'status',
      key: 'status',
      width: 120,
      render: (status: string, record: ImportItem) => {
        if (status === 'success') {
          return <Tag color="success" icon={<CheckCircleOutlined />}>Th√†nh c√¥ng</Tag>;
        } else if (status === 'error') {
          return <Tag color="error" icon={<ExclamationCircleOutlined />}>L·ªói</Tag>;
        }
        return <Tag color="processing">Ch·ªù x·ª≠ l√Ω</Tag>;
      }
    }
  ];

  const uploadProps = {
    name: 'file',
    multiple: false,
    accept: '.xlsx,.xls,.csv',
    beforeUpload: () => false,
    onChange: handleUpload,
    onDrop: handleUpload,
  };

  const successCount = importData.filter(item => item.status === 'success').length;
  const errorCount = importData.filter(item => item.status === 'error').length;
  const totalValue = importData
    .filter(item => item.status === 'success')
    .reduce((sum, item) => sum + (item.quantity * item.unitPrice), 0);

  return (
    <div style={{ padding: '24px' }}>
      <Title level={2}>üì¶ Nh·∫≠p Kho H√†ng</Title>
      
      {/* Progress Steps */}
      <Card style={{ marginBottom: '24px' }}>
        <Steps current={currentStep} style={{ marginBottom: '24px' }}>
          <Step title="Upload File" description="T·∫£i l√™n file Excel/CSV" />
          <Step title="Xem tr∆∞·ªõc" description="Ki·ªÉm tra d·ªØ li·ªáu" />
          <Step title="Import" description="Nh·∫≠p v√†o h·ªá th·ªëng" />
          <Step title="Ho√†n th√†nh" description="K·∫øt qu·∫£ import" />
        </Steps>
      </Card>

      {/* Step 0: Upload */}
      {currentStep === 0 && (
        <Row gutter={24}>
          <Col span={16}>
            <Card title="üìÅ T·∫£i l√™n file d·ªØ li·ªáu">
              <Dragger {...uploadProps} style={{ marginBottom: '16px' }}>
                <p className="ant-upload-drag-icon">
                  <InboxOutlined style={{ fontSize: '48px', color: '#1890ff' }} />
                </p>
                <p className="ant-upload-text">K√©o th·∫£ file v√†o ƒë√¢y ho·∫∑c click ƒë·ªÉ ch·ªçn</p>
                <p className="ant-upload-hint">
                  H·ªó tr·ª£ file Excel (.xlsx, .xls) v√† CSV. Dung l∆∞·ª£ng t·ªëi ƒëa 10MB
                </p>
              </Dragger>
              
              <Alert
                message="L∆∞u √Ω ƒë·ªãnh d·∫°ng file"
                description="File ph·∫£i c√≥ c√°c c·ªôt: M√£ s·∫£n ph·∫©m, T√™n s·∫£n ph·∫©m, Danh m·ª•c, S·ªë l∆∞·ª£ng, ƒê∆°n gi√°, Nh√† cung c·∫•p"
                type="info"
                showIcon
                style={{ marginBottom: '16px' }}
              />
              
              <Space>
                <Button 
                  icon={<DownloadOutlined />}
                  onClick={() => {
                    // Download template
                    notification.info({
                      message: 'T·∫£i template',
                      description: 'Template ƒë√£ ƒë∆∞·ª£c t·∫£i xu·ªëng'
                    });
                  }}
                >
                  T·∫£i template
                </Button>
                <Button 
                  type="primary"
                  onClick={handlePreview}
                  disabled={importData.length === 0}
                >
                  S·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u
                </Button>
              </Space>
            </Card>
          </Col>
          
          <Col span={8}>
            <Card title="üìã H∆∞·ªõng d·∫´n">
              <div style={{ lineHeight: '1.8' }}>
                <Text strong>B∆∞·ªõc 1:</Text> Chu·∫©n b·ªã file Excel v·ªõi c√°c c·ªôt b·∫Øt bu·ªôc
                <br />
                <Text strong>B∆∞·ªõc 2:</Text> T·∫£i l√™n file ho·∫∑c k√©o th·∫£ v√†o khu v·ª±c upload
                <br />
                <Text strong>B∆∞·ªõc 3:</Text> Xem tr∆∞·ªõc v√† ki·ªÉm tra d·ªØ li·ªáu
                <br />
                <Text strong>B∆∞·ªõc 4:</Text> X√°c nh·∫≠n import v√†o h·ªá th·ªëng
              </div>
              
              <Divider />
              
              <div>
                <Text strong style={{ color: '#52c41a' }}>‚úì</Text> T·ª± ƒë·ªông ph√°t hi·ªán tr√πng l·∫∑p
                <br />
                <Text strong style={{ color: '#52c41a' }}>‚úì</Text> Ki·ªÉm tra ƒë·ªãnh d·∫°ng d·ªØ li·ªáu
                <br />
                <Text strong style={{ color: '#52c41a' }}>‚úì</Text> C·∫≠p nh·∫≠t t·ªìn kho t·ª± ƒë·ªông
                <br />
                <Text strong style={{ color: '#52c41a' }}>‚úì</Text> B√°o c√°o chi ti·∫øt
              </div>
            </Card>
          </Col>
        </Row>
      )}

      {/* Step 1: Preview */}
      {currentStep === 1 && (
        <div>
          <Row gutter={16} style={{ marginBottom: '24px' }}>
            <Col span={6}>
              <Card>
                <div style={{ textAlign: 'center' }}>
                  <Title level={3} style={{ margin: 0, color: '#1890ff' }}>
                    {importData.length}
                  </Title>
                  <Text>T·ªïng s·∫£n ph·∫©m</Text>
                </div>
              </Card>
            </Col>
            <Col span={6}>
              <Card>
                <div style={{ textAlign: 'center' }}>
                  <Title level={3} style={{ margin: 0, color: '#52c41a' }}>
                    {importData.reduce((sum, item) => sum + item.quantity, 0).toLocaleString()}
                  </Title>
                  <Text>T·ªïng s·ªë l∆∞·ª£ng</Text>
                </div>
              </Card>
            </Col>
            <Col span={12}>
              <Card>
                <div style={{ textAlign: 'center' }}>
                  <Title level={3} style={{ margin: 0, color: '#fa8c16' }}>
                    {formatVND(importData.reduce((sum, item) => sum + (item.quantity * item.unitPrice), 0))}
                  </Title>
                  <Text>T·ªïng gi√° tr·ªã</Text>
                </div>
              </Card>
            </Col>
          </Row>

          <Card 
            title="üìã D·ªØ li·ªáu import"
            extra={
              <Space>
                <Button onClick={() => setCurrentStep(0)}>
                  Quay l·∫°i
                </Button>
                <Button 
                  type="primary" 
                  icon={<ImportOutlined />}
                  onClick={handleImport}
                  loading={importing}
                >
                  B·∫Øt ƒë·∫ßu import
                </Button>
              </Space>
            }
          >
            <Table
              columns={columns}
              dataSource={importData}
              rowKey="id"
              pagination={{ pageSize: 10 }}
              scroll={{ x: 1000 }}
            />
          </Card>
        </div>
      )}

      {/* Step 2: Importing */}
      {currentStep === 2 && (
        <Card title="üîÑ ƒêang th·ª±c hi·ªán import...">
          <div style={{ textAlign: 'center', padding: '48px 0' }}>
            <Progress
              type="circle"
              percent={importing ? 65 : 100}
              format={percent => `${percent}%`}
              size={120}
            />
            <div style={{ marginTop: '24px' }}>
              <Title level={4}>ƒêang x·ª≠ l√Ω d·ªØ li·ªáu...</Title>
              <Text type="secondary">
                Vui l√≤ng ƒë·ª£i trong gi√¢y l√°t. Qu√° tr√¨nh c√≥ th·ªÉ m·∫•t v√†i ph√∫t.
              </Text>
            </div>
          </div>
        </Card>
      )}

      {/* Step 3: Results */}
      {currentStep === 3 && (
        <div>
          <Row gutter={16} style={{ marginBottom: '24px' }}>
            <Col span={8}>
              <Card>
                <div style={{ textAlign: 'center' }}>
                  <Title level={3} style={{ margin: 0, color: '#52c41a' }}>
                    {successCount}
                  </Title>
                  <Text>Th√†nh c√¥ng</Text>
                </div>
              </Card>
            </Col>
            <Col span={8}>
              <Card>
                <div style={{ textAlign: 'center' }}>
                  <Title level={3} style={{ margin: 0, color: '#ff4d4f' }}>
                    {errorCount}
                  </Title>
                  <Text>L·ªói</Text>
                </div>
              </Card>
            </Col>
            <Col span={8}>
              <Card>
                <div style={{ textAlign: 'center' }}>
                  <Title level={3} style={{ margin: 0, color: '#fa8c16' }}>
                    {formatVND(totalValue)}
                  </Title>
                  <Text>Gi√° tr·ªã nh·∫≠p</Text>
                </div>
              </Card>
            </Col>
          </Row>

          <Card 
            title="üìä K·∫øt qu·∫£ import"
            extra={
              <Space>
                <Button onClick={() => {
                  setCurrentStep(0);
                  setImportData([]);
                }}>
                  Import m·ªõi
                </Button>
                <Button type="primary">
                  Xu·∫•t b√°o c√°o
                </Button>
              </Space>
            }
          >
            <Table
              columns={columns}
              dataSource={importData}
              rowKey="id"
              pagination={{ pageSize: 10 }}
              scroll={{ x: 1000 }}
            />
          </Card>
        </div>
      )}
    </div>
  );
};

export default InventoryImportPage;