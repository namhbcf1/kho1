name: Deploy to Cloudflare

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Application
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci
          
      - name: Run frontend tests
        run: |
          cd frontend
          npm run test -- --watchAll=false --coverage
          
      - name: Run backend tests  
        run: |
          cd backend
          npm run test
          
      - name: Lint frontend
        run: |
          cd frontend
          npm run lint
          
      - name: Lint backend
        run: |
          cd backend
          npm run lint
          
      - name: Type check frontend
        run: |
          cd frontend
          npm run type-check
          
      - name: Type check backend
        run: |
          cd backend
          npm run type-check

  deploy-staging:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: test
    name: Deploy to Staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci
          
      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          REACT_APP_API_URL: https://kho1-api-staging.workers.dev
          REACT_APP_ENVIRONMENT: staging
          
      - name: Build backend
        run: |
          cd backend
          npm run build
          
      - name: Deploy to Cloudflare Workers (Staging)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: backend
          command: deploy --env staging
          
      - name: Deploy to Cloudflare Pages (Staging)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: frontend
          command: pages deploy dist --project-name=kho1-staging

  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: test
    name: Deploy to Production
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci
          
      - name: Run database migrations
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: backend
          command: d1 execute vietnamese-pos-db --file=migrations/001_initial.sql --env production
          
      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          REACT_APP_API_URL: https://kho1-api.workers.dev
          REACT_APP_ENVIRONMENT: production
          REACT_APP_VERSION: ${{ github.sha }}
          
      - name: Build backend
        run: |
          cd backend
          npm run build
          
      - name: Deploy to Cloudflare Workers (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: backend
          command: deploy --env production
          
      - name: Deploy to Cloudflare Pages (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: frontend
          command: pages deploy dist --project-name=kho1
          
      - name: Run smoke tests
        run: |
          # Wait for deployment to be ready
          sleep 30
          
          # Test API health endpoint
          curl -f https://kho1-api.workers.dev/health || exit 1
          
          # Test frontend loading
          curl -f https://kho1.pages.dev || exit 1
          
      - name: Notify deployment success
        if: success()
        run: |
          echo "ðŸŽ‰ Production deployment successful!"
          echo "Frontend: https://kho1.pages.dev"
          echo "API: https://kho1-api.workers.dev"